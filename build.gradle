plugins {
    alias(libs.plugins.android.application) apply false
    alias(libs.plugins.android.library) apply false
    alias(libs.plugins.kotlin.android) apply false
    alias(libs.plugins.kotlin.serialization) apply false
    alias(libs.plugins.ktlint)
    alias(libs.plugins.gradleVersions)
    alias(libs.plugins.compose.compiler) apply false
}

ext {
    // Current version of the library
    libraryVersion = "0.0.1"
}

subprojects {
    // KTLint (Kotlin code style enforcer)
    apply(plugin: libs.plugins.ktlint.get().pluginId)
    ktlint {
        outputToConsole = true
    }

    def GROUP_VERIFICATION_TASKS = "Verification"
    task checkCode(dependsOn: ["ktlintCheck"])
    checkCode.group = GROUP_VERIFICATION_TASKS
    checkCode.description = "Run ktlint"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Don't show non stable updates for current stable versions
def isNonStable = { String version ->
    def stableKeyword = ["RELEASE", "FINAL", "GA"].any { keyword -> version.toUpperCase().contains(keyword) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    checkForGradleUpdate = true

    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                    reject("Release candidate")
                }
            }
        }
    }
}
